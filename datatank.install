<?php

/**
 * Implements hook_schema().
 */
function datatank_schema() {
  $datatank_fields = array();

  // The unique ID for the entity.
  $datatank_fields['did'] = array(
    'type' => 'serial',
    'description' => 'Unique id for the datatank.',
    'unsigned' => TRUE,
    'signed' => TRUE,
  );

  // ID of the user that created the Datatank entity.
  $datatank_fields['uid'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'ID of the user that created the Datatank entity.',
    'not null' => TRUE,
  );

  // Timestamp of when the entity was created.
  $datatank_fields['created'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'Timestamp of when the entity was created.',
    'not null' => TRUE,
  );

  // Timestamp of when the entity was last changed.
  $datatank_fields['changed'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'Timestamp of when the entity was last changed.',
    'not null' => TRUE,
  );

  // A name given to the datatank entity.
  $datatank_fields['title'] = array(
    'type' => 'varchar',
    'description' => 'A name given to the datatank entity.',
    'length' => 255,
    'not null' => TRUE,
  );

  // A description of the datatank entity.
  $datatank_fields['description'] = array(
    'type' => 'text',
    'description' => 'A description of the datatank entity.',
    'size' => 'normal',
    'not null' => FALSE,
  );

  // The url of the datatank. This is the url that will be used to connect to
  // the datatank and import datasets from.
  $datatank_fields['url'] = array(
    'type' => 'varchar',
    'description' => 'The url of the datatank.',
    'length' => 255,
    'not null' => TRUE,
  );

  // Synchronize frequency.
  $datatank_fields['sync_frequency'] = array(
    'description' => 'The number of seconds to pass before the next sync. If this is 0, the sync should happen manually.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Auto-publish new datasets.
  $datatank_fields['publish_new'] = array(
    'description' => 'Boolean. Auto-publish new datasets found on sync.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Auto-delete orphaned datasets.
  $datatank_fields['delete_orphaned'] = array(
    'description' => 'Boolean. Automatically delete ophaned dataset, instead of just depublishing them.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Auto-publish new datasets.
  $datatank_fields['last_sync'] = array(
    'description' => 'The timestamp of when the datatank was last synchronized.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Authentication username.
  $datatank_fields['auth_user'] = array(
    'type' => 'varchar',
    'description' => 'The username to use for authentication.',
    'length' => 255,
    'not null' => FALSE,
    'default' => '',
  );

  // Authentication password.
  $datatank_fields['auth_pass'] = array(
    'type' => 'varchar',
    'description' => 'The password to use for authentication.',
    'length' => 255,
    'not null' => FALSE,
    'default' => '',
  );

  $dataset_fields = array();

  // The unique ID for the entity.
  $dataset_fields['dsid'] = array(
    'type' => 'serial',
    'description' => 'Unique id for the dataset.',
    'unsigned' => TRUE,
    'signed' => TRUE,
  );

  // ID of the user that created the dataset entity.
  $dataset_fields['uid'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'ID of the user that created the dataset entity.',
    'not null' => TRUE,
  );

  // Timestamp of when the entity was created.
  $dataset_fields['created'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'Timestamp of when the entity was created.',
    'not null' => TRUE,
  );

  // Timestamp of when the entity was last changed.
  $dataset_fields['changed'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'Timestamp of when the entity was last changed.',
    'not null' => TRUE,
  );

  // The ID of the datatank where the dataset is from.
  $dataset_fields['did'] = array(
    'type' => 'int',
    'size' => 'normal',
    'description' => 'The ID of the datatank where the dataset is from.',
    'not null' => TRUE,
  );

  // Together with the url of the datatank, this makes up the location of the dataset.
  $dataset_fields['identifier'] = array(
    'type' => 'varchar',
    'description' => 'Together with the url of the datatank, this makes up the location of the dataset.',
    'length' => 255,
    'not null' => TRUE,
  );

  // A description of the datatank entity.
  $dataset_fields['description'] = array(
    'type' => 'text',
    'description' => 'A description of the dataset entity.',
    'size' => 'normal',
    'not null' => FALSE,
  );

  // A name given to the dataset entity.
  $dataset_fields['title'] = array(
    'type' => 'varchar',
    'description' => 'A name given to the dataset entity.',
    'length' => 255,
    'not null' => TRUE,
  );

  // A point or period of time associated with an event in the lifecycle of the
  // resource. Best practise is to use the ISO 8601 scheme.
  $dataset_fields['date'] = array(
    'type' => 'varchar',
    'description' => 'A point or period of time associated with an event in the lifecycle of the resource. Best practise is to use the ISO 8601 scheme.',
    'length' => 255,
    'not null' => FALSE,
  );

  // The nature or genre of the resource.
  $dataset_fields['type'] = array(
    'type' => 'varchar',
    'description' => 'The nature or genre of the resource.',
    'length' => 255,
    'not null' => FALSE,
  );

  // The file format, physical medium, or dimensions of the resource.
  $dataset_fields['format'] = array(
    'type' => 'varchar',
    'description' => 'The file format, physical medium, or dimensions of the resource.',
    'length' => 255,
    'not null' => FALSE,
  );

  // A related resource from which the described resource is derived.
  $dataset_fields['source'] = array(
    'type' => 'varchar',
    'description' => 'A related resource from which the described resource is derived.',
    'length' => 255,
    'not null' => FALSE,
  );

  // A language of the resource.
  $dataset_fields['data_language'] = array(
    'type' => 'varchar',
    'description' => 'A language of the resource.',
    'length' => 255,
    'not null' => FALSE,
  );

  // Information about rights held in and over the resource.
  $dataset_fields['rights'] = array(
    'type' => 'varchar',
    'description' => 'Information about rights held in and over the resource.',
    'length' => 255,
    'not null' => FALSE,
  );

  // Published or unpublished
  $dataset_fields['status'] = array(
    'description' => 'Boolean. The status of the dataset (published or unpublished).',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Orphaned.
  $dataset_fields['orphaned'] = array(
    'description' => 'Boolean. If the dataset was not found anymore in the datatank, this is set to TRUE.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  $schema = array(
    'datatank' => array(
      'description' => 'Base table for the datatank entity.',
      'fields' => $datatank_fields,
      'primary key' => array('did'),
    ),
    'datatank_dataset' => array(
      'description' => 'Base table for the dataset entity.',
      'fields' => $dataset_fields,
      'primary key' => array('dsid'),
      'unique keys' => array(array('did', 'identifier')),
    ),
  );

  return $schema;
}
